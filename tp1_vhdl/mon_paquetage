library ieee;
use ieee.std_ logic_ 1164. all;
use ieee.std logic_unsigned.all;

package mes_ fonctions is
function cpl2 (entree: std_logic_vector ; N : natural)
  return std_logic_vector;

end mes fonctions;
 -------------------------------------------------------------------

library ieee;
use ieee.std_ logic_1164.all;
use ieee.Std_logic_unsigned.all;

package body fonctions is
function cpl2 (entree: sta logic_vector ; N: natural)
  return std_logic_vector is

variable temp : std_logic_vector ( N-1 downto 0); 
begin 
temp := not entree;
temp := temp + '1';
return temp;
end cp12 ;
end mes fonctions;

----------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

package CHECK_ PKG is
  
-- Déclaration de la procédures check_setup. procedure check setup ( signal clk
procedure check_setup(signal clk: in std logic;
                      signal din: in std_logic;
                             t_setup : in time;
                             severite : in severity_level:=warning;
                             hdeb : in time := time'low;
                             hfin : in time := time'high);
                             
procedure check_hold(signal clk: in std logic;
                      signal din: in std_logic;
                             t_hold : in time;
                             severite : in severity_level:=warning;
                             hdeb : in time := time'low;
                             hfin : in time := time'high);
end CHECK_ PKG;

--------------------------------------------------------------------------

library ieee ;
use ieee.std_logic_1164.all 

package body CHECK_ PKG is

--Spécification du corps du paquetage.
--la procédure check_setup 
procedure check_setup ( signal clk: in std_logic;
                        signal din: in std_logic;
                               t_setup: in ttime;
                               severite : in severity_level:=warning;
                               hdeb: in time :=time'low;
                               hfin : in time := time'high) is


begin
  loop
    wait on clk;
    if clk = '1' and clk'event then 
      if now >= hdeb and now <= hfin then
        assert din'last_event >= t_setup and din'event = false
        report "temps de setup non respecté" severity severite;
      elsif now > hfin then
        wait;
      end if;
    end if;
  end loop;
end check_setup;

-------------------------------------------------------------------

procedure check_hold ( signal clk: in std_logic;
                        signal din: in std_logic;
                               t_hold: in ttime;
                               severite : in severity_level:=warning;
                               hdeb: in time :=time'low;
                               hfin : in time := time'high) is
          variable t : time;


begin
  loop
    wait until clk ='1';
    t:=now;
    if t>= hdeb and t<=hfin then
      if din'event=false then
        wait on din for t_hold;
      end if;
    assert din'event = false or (now - t) = t_hold
    report "temps de hold non respecté" severity severite;
    wait;     ---suspension definitive
  end if;
end loop;
end check_hold;
end CHECK_PKG;